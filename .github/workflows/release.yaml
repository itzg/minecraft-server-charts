name: Release Charts

on:
  push:
    branches:
      - master

jobs:
  release:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
          continue-after-seconds: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Install Cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add dependency chart repos
        run: |
          helm repo add stable https://charts.helm.sh/stable

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.1.0
        with:
          charts_repo_url: https://itzg.github.io/minecraft-server-charts0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Iterate and Push Updated Charts to GHCR
        run: |
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              chart_name=$(basename "$chart")
              chart_version=$(helm show chart "$chart" | grep '^version:' | awk '{print $2}')
              oci_url="oci://ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/$chart_name"

              echo "Processing $chart_name - version $chart_version"
              echo "Target OCI URL: $oci_url"

              # Check if the OCI image already exists
              if helm pull "$oci_url" --version "$chart_version" 2>/dev/null; then
                echo "Chart $chart_name:$chart_version already exists in GHCR, skipping..."
                continue
              fi

              echo "New version detected, publishing..."
              helm package "$chart"
              helm push "${chart_name}-${chart_version}.tgz" "$oci_url"

              # Sign OCI artifact with Cosign
              echo "Signing OCI artifact..."
              cosign sign --yes "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/$chart_name:$chart_version"
            fi
          done
