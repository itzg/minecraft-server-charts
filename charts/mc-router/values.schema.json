{
  "$schema": "http://json-schema.org/schema",
  "required": ["minecraftRouter"],
  "properties": {
    "minecraftRouter": {
      "type": "object",
      "properties": {
        "autoScaleUp": {
          "type": "object",
          "title": "\"Wake up\" any stopped Minecraft servers.",
          "description": "This requires Minecraft servers to be kind: StatefulSet",
          "properties": {
            "enabled": {
              "anyOf": [
                { "type": "string", "enum": ["default"] },
                { "type": "boolean" }
              ]
            }
          }
        },

        "connectionRateLimit": {
          "type": "integer",
          "title": "Max number of connections to allow per second"
        },

        "cpuProfilePath": {
          "type": "string",
          "title": "Write CPU profiling to given path"
        },

        "debug": {
          "type": "object",
          "title": "Enable debug logs",
          "properties": {
            "enabled": {
              "anyOf": [
                { "type": "string", "enum": ["default"] },
                { "type": "boolean" }
              ]
            }
          }
        },

        "defaultServer": {
          "type": "object",
          "title": "Default Minecraft server to use when mapping not found",
          "properties": {
            "host": {
              "type": "string"
            },
            "port": {
              "type": "integer"
            }
          }
        },

        "mappings": {
          "type": "array",
          "title": "Minecraft server mappings",
          "items": {
            "type": "object",
            "uniqueItems": true,
            "properties": {
              "externalHostname": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              }
            }
          }
        },

        "metrics": {
          "type": "object",
          "properties": {
            "backend": {
              "type": "string",
              "title": "Backend to use for metrics exposure/publishing",
              "enum": ["discard", "expvar", "influxdb"]
            }
          },
          "if": {
            "properties": {
              "backend": { "const": "influxdb" }
            },
            "required": ["backend"]
          },
          "then": {
            "required": ["influxdb"],
            "properties": {
              "influxdb": {
                "type": "object",
                "title": "InfluxDB settings",
                "description": "Required if backend is set to influxdb",
                "additionalProperties": false,
                "minProperties": 6,
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "database": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "string"
                  },
                  "credentials": {
                    "type": "object",
                    "additionalProperties": false,
                    "minProperties": 3,
                    "properties": {
                      "existingSecret": {
                        "type": "string",
                        "title": "The name of an existing secret containing the database credentials"
                      },
                      "usernameKey": {
                        "type": "string",
                        "title": "The key in the existing secret containing the username"
                      },
                      "passwordKey": {
                        "type": "string",
                        "title": "The key in the existing secret containing the password"
                      }
                    }
                  },
                  "retentionPolicy": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string",
                    "title": "Extra tags to be included with all reported metrics"
                  }
                }
              }
            }
          }
        },

        "ngrokToken": {
          "type": "object",
          "title": "If set, an ngrok tunnel will be established.",
          "properties": {
            "existingSecret": {
              "type": "string",
              "title": "The name of an existing secret containing the token"
            },
            "tokenKey": {
              "type": "string",
              "title": "The key in the existing secret containing the token"
            }
          }
        },

        "simplifySrv": {
          "title": "Simplify fully qualified SRV records for mapping",
          "anyOf": [
            { "type": "string", "enum": ["default"] },
            { "type": "boolean" }
          ]
        }
      }
    }
  }
}
