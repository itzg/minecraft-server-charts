apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mc-router.fullname" . }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "mc-router.labels" . | nindent 4 }}
  {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mc-router.selectorLabels" . | nindent 6 }}
  strategy:
    {{- .Values.deploymentStrategy | toYaml | nindent 4}}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mc-router.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mc-router.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "mc-router.envBoolMap" (list "IN_KUBE_CLUSTER" "true") | nindent 12 }}
            {{- include "mc-router.envMap" (list "API_BINDING" (printf ":%d" (.Values.service.apiPort | int))) | nindent 12 }}
            {{- include "mc-router.envMap" (list "PORT" .Values.service.minecraftPort) | nindent 12 }}
# TODO: Debug why templates with empty value output an empty line
            {{- with .Values.minecraftRouter }}
              {{- include "mc-router.envBoolMap" (list "AUTO_SCALE_UP" .autoScaleUp.enabled) | nindent 12 }}
              {{- include "mc-router.envMap" (list "CONNECTION_RATE_LIMIT" .connectionRateLimit) | nindent 12 }}
              {{- include "mc-router.envMap" (list "CPU_PROFILE" .cpuProfilePath) | nindent 12 }} # TODO: Test this
              {{- include "mc-router.envBoolMap" (list "DEBUG" .debug.enabled) | nindent 12 }}

              {{- with .defaultServer }}
                {{- include "mc-router.envMap" (list "DEFAULT" (printf "%s:%d" .host (.port | int))) | nindent 12 }}
              {{- end }}

              {{- include "mc-router.envMap" (list "MAPPING" (include "mc-router.formatMappings" .mappings)) | nindent 12 }}

              {{- with .metrics }}
                {{- include "mc-router.envMap" (list "METRICS_BACKEND" .backend) | nindent 12 }}

                {{- if eq .backend "influxdb" }}
                  {{- with .influxdb }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_ADDR" .address) | nindent 12 }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_DATABASE" .database) | nindent 12 }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_INTERVAL" .interval) | nindent 12 }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_PASSWORD" .password) | nindent 12 }}  # TODO: Read password from Kubernetes Secret
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_RETENTION_POLICY" .retentionPolicy) | nindent 12 }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_TAGS" .tags) | nindent 12 }}
                    {{- include "mc-router.envMap" (list "METRICS_BACKEND_CONFIG_INFLUXDB_USERNAME" .username) | nindent 12 }}  # TODO: Read username from Kubernetes Secret
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}
          ports:
            - name: api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: minecraft
              containerPort: {{ .Values.service.minecraftPort }}
              protocol: TCP
          # TODO: Check if probes are feasible
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
