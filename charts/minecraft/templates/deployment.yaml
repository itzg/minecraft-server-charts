{{- if ne (printf "%s" .Values.minecraftServer.eula) "FALSE" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "minecraft.fullname" . }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app: {{ template "minecraft.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      app: {{ template "minecraft.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "minecraft.fullname" . }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
      {{- if and .Values.mcbackup.enabled .Values.minecraftServer.rcon.enabled }}
      - name: {{ template "minecraft.fullname" . }}-mc-backup
        image: "{{ .Values.mcbackup.image.repository }}:{{ .Values.mcbackup.image.tag }}"
        imagePullPolicy: {{ .Values.mcbackup.image.pullPolicy }}
        resources:
{{ toYaml .Values.mcbackup.resources | indent 10 }}
        env:
        - name: SRC_DIR
          value: "/data"
        - name: BACKUP_NAME
          value: {{ default "world" .Values.minecraftServer.worldSaveName | quote }}
        - name: INITIAL_DELAY
          value: {{ default "2m" .Values.mcbackup.initialDelay | quote }}
        - name: BACKUP_INTERVAL
          value: {{ default "24h" .Values.mcbackup.backupInterval | quote }}
        - name: PRUNE_BACKUPS_DAYS
          value: {{ default "7" .Values.mcbackup.pruneBackupsDays | quote }}
        - name: PAUSE_IF_NO_PLAYERS
          value: {{ default "false" .Values.mcbackup.pauseIfNoPlayers | quote }}
        - name: SERVER_PORT
          value: "25565"
        - name: RCON_HOST
          value: "localhost"
        - name: RCON_PORT
          value: {{ .Values.minecraftServer.rcon.port | quote }}
        - name: RCON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minecraftServer.rcon.existingSecret | default (include "minecraft.fullname" .) }}
              key: {{ .Values.minecraftServer.rcon.secretKey | default "rcon-password" }}
        - name: RCON_RETRIES
          value: {{ default 5 .Values.mcbackup.rconRetries | quote }}
        - name: RCON_RETRY_INTERVAL
          value: {{ default "10s" .Values.mcbackup.rconRetryInterval | quote }}
        - name: EXCLUDES
          value: {{ default "*.jar,cache,logs" .Values.mcbackup.excludes | quote }}
        - name: BACKUP_METHOD
          value: {{ default "tar" .Values.mcbackup.backupMethod | quote }}
        {{- if or (eq .Values.mcbackup.backupMethod "tar") (eq .Values.mcbackup.backupMethod "rclone") }}
        - name: DEST_DIR
          value: {{ default "/backups" .Values.mcbackup.destDir | quote }}
        - name: LINK_LATEST
          value: {{ default "false" .Values.mcbackup.linkLatest | quote }}
        - name: TAR_COMPRESS_METHOD
          value: {{ default "gzip" .Values.mcbackup.compressMethod | quote }}
        - name: ZSTD_PARAMETERS
          value: {{ default "-3 --long=25 --single-thread" .Values.mcbackup.zstdParameters | quote }}
        {{- if eq .Values.mcbackup.backupMethod "rclone" }}
        - name: RCLONE_REMOTE
          value: {{ .Values.mcbackup.rcloneRemote | quote }}
        - name: RCLONE_DEST_DIR
          value: {{ .Values.mcbackup.rcloneDestDir | quote }}
        - name: RCLONE_COMPRESS_METHOD
          value: {{ default "gzip" .Values.mcbackup.rcloneCompressMethod | quote }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.mcbackup.backupMethod "restic" }}
        - name: RESTIC_REPOSITORY
          value: {{ .Values.mcbackup.resticRepository | quote }}
        - name: RESTIC_ADDITIONAL_TAGS
          value: {{ default "mc_backups" .Values.mcbackup.resticAdditionalTags | quote }}
        - name: PRUNE_RESTIC_RETENTION
          value: {{ default "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly" .Values.mcbackup.pruneResticRetention | quote }}
        {{- range $key, $value := .Values.mcbackup.resticEnvs }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.mcbackup.extraEnv }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        volumeMounts:
        - name: datadir
          mountPath: /data
          readOnly: true
        - name: backupdir
          mountPath: {{ default "/backups" .Values.mcbackup.destDir }}
        {{- if eq .Values.mcbackup.backupMethod "rclone" }}
        - name: rclone-config
          mountPath: /config/rclone
        {{- end }}
        {{- range .Values.extraVolumes }}
        {{-   if .volumeMounts }}
        {{-     toYaml .volumeMounts | nindent 8 }}
        {{-   end }}
        {{- end }}
      {{- end }}
      - name: {{ template "minecraft.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          tcpSocket:
            port: 25565
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: 25565
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        livenessProbe:
          tcpSocket:
            port: 25565
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
      {{- with .Values.envFrom }}
        envFrom:
          {{- . | toYaml | nindent 10 }}{{ end }}
        env:
        - name: EULA
          value: {{ .Values.minecraftServer.eula | quote }}
        - name: TYPE
          value: {{ default "" .Values.minecraftServer.type | quote }}
        {{- if eq .Values.minecraftServer.type "FORGE" }}
        {{- if .Values.minecraftServer.forgeInstallerUrl }}
        - name: FORGE_INSTALLER_URL
          value: {{ .Values.minecraftServer.forgeInstallerUrl | quote }}
        {{- else }}
        - name: FORGEVERSION
          value: {{ .Values.minecraftServer.forgeVersion | quote }}
        {{- end }}
        {{- else if eq .Values.minecraftServer.type "SPIGOT" }}
        - name: SPIGOT_DOWNLOAD_URL
          value: {{ .Values.minecraftServer.spigotDownloadUrl | quote }}
        {{- else if eq .Values.minecraftServer.type "BUKKIT" }}
        - name: BUKKIT_DOWNLOAD_URL
          value: {{ .Values.minecraftServer.bukkitDownloadUrl | quote }}
        {{- else if eq .Values.minecraftServer.type "PAPER" }}
        - name: PAPER_DOWNLOAD_URL
          value: {{ .Values.minecraftServer.paperDownloadUrl | quote }}
        {{- else if eq .Values.minecraftServer.type "FTBA" }}
        - name: FTB_MODPACK_ID
          value: {{ required "You must supply a minecraftserver.ftbModpackVersionID with type=FTBA" .Values.minecraftServer.ftbModpackId | quote }}
        {{- if .Values.minecraftServer.ftbModpackVersionId }}
        - name: FTB_MODPACK_VERSION_ID
          value: {{ .Values.minecraftServer.ftbModpackVersionId | quote }}
        {{- end }}
        {{- else if eq .Values.minecraftServer.type "CURSEFORGE" }}
        - name: CF_SERVER_MOD
          value: {{ .Values.minecraftServer.cfServerMod | quote }}
        - name: FTB_LEGACYJAVAFIXER
          value: {{ default false .Values.minecraftServer.ftbLegacyJavaFixer | quote }}
        {{- end }}
        - name: VERSION
          value: {{ .Values.minecraftServer.version | quote }}
        - name: DIFFICULTY
          value: {{ .Values.minecraftServer.difficulty | quote }}
        - name: WHITELIST
          value: {{ default "" .Values.minecraftServer.whitelist | quote }}
        - name: OPS
          value: {{ default "" .Values.minecraftServer.ops | quote }}
        - name: ICON
          value: {{ default "" .Values.minecraftServer.icon | quote }}
        - name: MAX_PLAYERS
          value: {{ .Values.minecraftServer.maxPlayers | quote }}
        - name: MAX_WORLD_SIZE
          value: {{ .Values.minecraftServer.maxWorldSize | quote }}
        - name: ALLOW_NETHER
          value: {{ .Values.minecraftServer.allowNether | quote }}
        - name: ANNOUNCE_PLAYER_ACHIEVEMENTS
          value: {{ .Values.minecraftServer.announcePlayerAchievements | quote }}
        - name: ENABLE_COMMAND_BLOCK
          value: {{ .Values.minecraftServer.enableCommandBlock | quote }}
        - name: FORCE_GAMEMODE
          value: {{ .Values.minecraftServer.forcegameMode | quote }}
        {{- if .Values.minecraftServer.forceReDownload }}
        - name: FORCE_REDOWNLOAD
          value: "TRUE"
        {{- end }}
        - name: GENERATE_STRUCTURES
          value: {{ .Values.minecraftServer.generateStructures | quote }}
        - name: HARDCORE
          value: {{ .Values.minecraftServer.hardcore | quote }}
        - name: MAX_BUILD_HEIGHT
          value: {{ .Values.minecraftServer.maxBuildHeight | quote }}
        - name: MAX_TICK_TIME
          value: {{ .Values.minecraftServer.maxTickTime | quote }}
        - name: SPAWN_ANIMALS
          value: {{ .Values.minecraftServer.spawnAnimals | quote }}
        - name: SPAWN_MONSTERS
          value: {{ .Values.minecraftServer.spawnMonsters | quote }}
        - name: SPAWN_NPCS
          value: {{ .Values.minecraftServer.spawnNPCs | quote }}
        - name: SPAWN_PROTECTION
          value: {{ .Values.minecraftServer.spawnProtection | quote }}
        - name: VIEW_DISTANCE
          value: {{ .Values.minecraftServer.viewDistance | quote }}
        - name: SEED
          value: {{ default "" .Values.minecraftServer.levelSeed | quote }}
        - name: MODE
          value: {{ .Values.minecraftServer.gameMode | quote }}
        - name: MOTD
          value: {{ .Values.minecraftServer.motd | quote }}
        - name: PVP
          value: {{ .Values.minecraftServer.pvp | quote }}
        - name: LEVEL_TYPE
          value: {{ .Values.minecraftServer.levelType | quote }}
        - name: GENERATOR_SETTINGS
          value: {{ default "" .Values.minecraftServer.generatorSettings | quote }}
        - name: LEVEL
          value: {{ .Values.minecraftServer.worldSaveName | quote }}
        {{- if .Values.minecraftServer.downloadWorldUrl }}
        - name: WORLD
          value: {{ .Values.minecraftServer.downloadWorldUrl | quote }}
        {{- end }}
        {{- if .Values.minecraftServer.downloadModpackUrl }}
        - name: MODPACK
          value: {{ .Values.minecraftServer.downloadModpackUrl | quote }}
        {{- if .Values.minecraftServer.removeOldMods }}
        - name: REMOVE_OLD_MODS
          value: "TRUE"
        {{- end }}
        {{- end }}
        {{- if .Values.minecraftServer.spigetResources }}
        - name: SPIGET_RESOURCES
          value: {{ join "," .Values.minecraftServer.spigetResources | quote }}
        {{- end }}
        {{- if .Values.minecraftServer.vanillaTweaksShareCodes }}
        - name: VANILLATWEAKS_SHARECODE
          value: {{ join "," .Values.minecraftServer.vanillaTweaksShareCodes | quote }}
        {{- if .Values.minecraftServer.resourcePackUrl }}
        - name: RESOURCE_PACK
          value: {{ .Values.minecraftServer.resourcePackUrl | quote }}
        {{- end }}
        {{- if .Values.minecraftServer.resourcePackSha }}
        - name: RESOURCE_PACK_SHA1
          value: {{ .Values.minecraftServer.resourcePackSha | quote }}
        {{- end }}
        {{- if .Values.minecraftServer.resourcePackEnforce }}
        - name: RESOURCE_PACK_ENFORCE
          value: "TRUE"
        {{- end }}
        {{- end }}
        - name: ONLINE_MODE
          value: {{ .Values.minecraftServer.onlineMode | quote }}
        - name: MEMORY
          value: {{ .Values.minecraftServer.memory | quote }}
        - name: JVM_OPTS
          value: {{ .Values.minecraftServer.jvmOpts | quote }}
        - name: JVM_XX_OPTS
          value: {{ .Values.minecraftServer.jvmXXOpts | quote }}
        - name: OVERRIDE_SERVER_PROPERTIES
          value: {{ default false .Values.minecraftServer.overrideServerProperties | quote }}

        {{- if .Values.minecraftServer.rcon.enabled }}
        - name: ENABLE_RCON
          value: "true"
        - name: RCON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minecraftServer.rcon.existingSecret | default (include "minecraft.fullname" .) }}
              key: {{ .Values.minecraftServer.rcon.secretKey | default "rcon-password" }}
        {{- else }}
        - name: ENABLE_RCON
          value: "false"
        {{- end }}
        {{- if .Values.minecraftServer.query.enabled }}
        - name: ENABLE_QUERY
          value: "true"
        - name: QUERY_PORT
          value: {{ .Values.minecraftServer.query.port | quote }}
        {{- end }}

      {{- range $key, $value := .Values.extraEnv }}
      {{-   if kindIs "map" $value }}
      {{-     if hasKey $value "valueFrom" }}
        - name: {{ $key }}
          valueFrom:
            {{- $value.valueFrom | toYaml | nindent 12 }}
      {{-     end }}
      {{-   else }}
        - name: {{ $key }}
          value: {{ $value | quote }}
      {{-   end }}
      {{- end }}

        ports:
        - name: minecraft
          containerPort: 25565
          protocol: TCP
        {{- if .Values.minecraftServer.rcon.enabled }}
        - name: rcon
          containerPort: {{ .Values.minecraftServer.rcon.port }}
          protocol: TCP
        {{- end }}
        {{- range .Values.minecraftServer.extraPorts }}
        {{- if .service.enabled }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          {{- if .protocol }}
          protocol: {{ .protocol }}
          {{- else }}
          protocol: TCP
          {{- end }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - name: datadir
          mountPath: /data
          {{- if (and .Values.persistence.dataDir.enabled .Values.persistence.dataDir.subPath) }}
          subPath: {{ .Values.persistence.dataDir.subPath }}
          {{- end }}
        - name: backupdir
          mountPath: {{ default "/backups" .Values.mcbackup.destDir }}
          readOnly: true
        {{- range .Values.extraVolumes }}
        {{-   if .volumeMounts }}
        {{-     toYaml .volumeMounts | nindent 8 }}
        {{-   end }}
        {{- end }}
      {{- if .Values.sidecarContainers }}
      {{- toYaml .Values.sidecarContainers | nindent 6 }}
      {{- end }}
      volumes:
      - name: datadir
      {{- if .Values.persistence.dataDir.enabled }}
        persistentVolumeClaim:
        {{- if .Values.persistence.dataDir.existingClaim }}
          claimName: {{ .Values.persistence.dataDir.existingClaim }}
        {{- else }}
          claimName: {{ template "minecraft.fullname" . }}-datadir
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: backupdir
      {{- if and .Values.mcbackup.persistence.backupDir.enabled .Values.mcbackup.enabled }}
        persistentVolumeClaim:
        {{- if .Values.mcbackup.persistence.backupDir.existingClaim }}
          claimName: {{ .Values.mcbackup.persistence.backupDir.existingClaim }}
        {{- else }}
          claimName: {{ template "minecraft.fullname" . }}-backupdir
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if eq .Values.mcbackup.backupMethod "rclone" }}
      - name: rclone-config
        secret:
        {{- if .Values.mcbackup.rcloneConfigExistingSecret }}
          secretName: {{ .Values.mcbackup.rcloneConfigExistingSecret }}
        {{- else }}
          secretName: {{ template "minecraft.fullname" . }}-rclone-config
        {{- end }}
          items:
          - key: rclone.conf
            path: rclone.conf
      {{- end }}
      {{- range .Values.extraVolumes }}
      {{-   if .volumes }}
      {{-     toYaml .volumes | nindent 6 }}
      {{-   end }}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
{{ end }}
