{{- if ne (printf "%s" .Values.minecraftServer.eula) "FALSE" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "minecraft.fullname" . }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app: {{ template "minecraft.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      app: {{ template "minecraft.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "minecraft.fullname" . }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
      {{- if and .Values.mcbackup.enabled .Values.minecraftServer.rcon.enabled }}
      - name: {{ template "minecraft.fullname" . }}-mc-backup
        image: "{{ .Values.mcbackup.image.repository }}:{{ .Values.mcbackup.image.tag }}"
        imagePullPolicy: {{ .Values.mcbackup.image.pullPolicy }}
        resources:
{{ toYaml .Values.mcbackup.resources | indent 10 }}
      {{- with .Values.mcbackup.envFrom }}
        envFrom:
          {{- . | toYaml | nindent 10 }}{{ end }}
        env:
        - name: SRC_DIR
          value: "/data"
{{- template "minecraft.envMap" list "BACKUP_NAME" .Values.minecraftServer.worldSaveName  }}
{{- template "minecraft.envMap" list "INITIAL_DELAY" .Values.mcbackup.initialDelay  }}
{{- template "minecraft.envMap" list "BACKUP_INTERVAL" .Values.mcbackup.backupInterval  }}
{{- template "minecraft.envMap" list "PRUNE_BACKUPS_DAYS" .Values.mcbackup.pruneBackupsDays  }}
{{- template "minecraft.envMap" list "PAUSE_IF_NO_PLAYERS" .Values.mcbackup.pauseIfNoPlayers  }}
        - name: SERVER_PORT
          value: "25565"
        - name: RCON_HOST
          value: "localhost"
{{- template "minecraft.envMap" list "RCON_PORT" .Values.minecraftServer.rcon.port  }}
        - name: RCON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minecraftServer.rcon.existingSecret | default (include "minecraft.fullname" .) }}
              key: {{ .Values.minecraftServer.rcon.secretKey | default "rcon-password" }}
{{- template "minecraft.envMap" list "RCON_RETRIES" .Values.mcbackup.rconRetries  }}
{{- template "minecraft.envMap" list "RCON_RETRY_INTERVAL" .Values.mcbackup.rconRetryInterval  }}
{{- template "minecraft.envMap" list "EXCLUDES" .Values.mcbackup.excludes  }}
{{- template "minecraft.envMap" list "BACKUP_METHOD" .Values.mcbackup.backupMethod  }}
        {{- if or (eq .Values.mcbackup.backupMethod "tar") (eq .Values.mcbackup.backupMethod "rclone") }}
{{- template "minecraft.envMap" list "DEST_DIR" .Values.mcbackup.destDir  }}
{{- template "minecraft.envMap" list "LINK_LATEST" .Values.mcbackup.linkLatest  }}
{{- template "minecraft.envMap" list "TAR_COMPRESS_METHOD" .Values.mcbackup.compressMethod  }}
{{- template "minecraft.envMap" list "ZSTD_PARAMETERS" .Values.mcbackup.zstdParameters  }}
        {{- if eq .Values.mcbackup.backupMethod "rclone" }}
{{- template "minecraft.envMap" list "RCLONE_REMOTE" .Values.mcbackup.rcloneRemote  }}
{{- template "minecraft.envMap" list "RCLONE_DEST_DIR" .Values.mcbackup.rcloneDestDir  }}
{{- template "minecraft.envMap" list "RCLONE_COMPRESS_METHOD" .Values.mcbackup.rcloneCompressMethod  }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.mcbackup.backupMethod "restic" }}
{{- template "minecraft.envMap" list "RESTIC_REPOSITORY" .Values.mcbackup.resticRepository  }}
{{- template "minecraft.envMap" list "RESTIC_ADDITIONAL_TAGS" .Values.mcbackup.resticAdditionalTags  }}
{{- template "minecraft.envMap" list "PRUNE_RESTIC_RETENTION" .Values.mcbackup.pruneResticRetention  }}
        {{- range $key, $value := .Values.mcbackup.resticEnvs }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}

        {{- range $key, $value := .Values.mcbackup.extraEnv }}
        {{-   if kindIs "map" $value }}
        {{-     if hasKey $value "valueFrom" }}
        - name: {{ $key }}
          valueFrom:
            {{- $value.valueFrom | toYaml | nindent 12 }}
        {{-     end }}
        {{-   else }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{-   end }}
        {{- end }}
        volumeMounts:
        - name: datadir
          mountPath: /data
          readOnly: true
        - name: backupdir
          mountPath: {{ default "/backups" .Values.mcbackup.destDir }}
        {{- if eq .Values.mcbackup.backupMethod "rclone" }}
        - name: rclone-config
          mountPath: /config/rclone
        {{- end }}
        {{- range .Values.extraVolumes }}
        {{-   if .volumeMounts }}
        {{-     toYaml .volumeMounts | nindent 8 }}
        {{-   end }}
        {{- end }}
      {{- end }}
      - name: {{ template "minecraft.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        tty: true
        stdin: true
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          exec:
            command:
            {{-  toYaml .Values.startupProbe.command | nindent 12 }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
        {{- end }}
        readinessProbe:
          exec:
            command:
            {{-  toYaml .Values.readinessProbe.command | nindent 12 }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        livenessProbe:
          exec:
            command:
            {{-  toYaml .Values.livenessProbe.command | nindent 12 }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
      {{- with .Values.envFrom }}
        envFrom:
          {{- . | toYaml | nindent 10 }}{{ end }}
        env:
{{- template "minecraft.envMap" list "EULA" .Values.minecraftServer.eula  }}
{{- template "minecraft.envMap" list "TYPE" .Values.minecraftServer.type  }}
        {{- if eq .Values.minecraftServer.type "FORGE" }}
        {{- if .Values.minecraftServer.forgeInstallerUrl }}
{{- template "minecraft.envMap" list "FORGE_INSTALLER_URL" .Values.minecraftServer.forgeInstallerUrl  }}
        {{- else }}
{{- template "minecraft.envMap" list "FORGEVERSION" .Values.minecraftServer.forgeVersion  }}
        {{- end }}
        {{- else if eq .Values.minecraftServer.type "SPIGOT" }}
{{- template "minecraft.envMap" list "SPIGOT_DOWNLOAD_URL" .Values.minecraftServer.spigotDownloadUrl  }}
        {{- else if eq .Values.minecraftServer.type "BUKKIT" }}
{{- template "minecraft.envMap" list "BUKKIT_DOWNLOAD_URL" .Values.minecraftServer.bukkitDownloadUrl  }}
        {{- else if eq .Values.minecraftServer.type "PAPER" }}
{{- template "minecraft.envMap" list "PAPER_DOWNLOAD_URL" .Values.minecraftServer.paperDownloadUrl  }}
        {{- else if eq .Values.minecraftServer.type "FTBA" }}
{{- template "minecraft.envMap" list "FTB_MODPACK_ID" required "You must supply a minecraftserver.ftbModpackVersionID with type=FTBA" .Values.minecraftServer.ftbModpackId  }}
        {{- if .Values.minecraftServer.ftbModpackVersionId }}
{{- template "minecraft.envMap" list "FTB_MODPACK_VERSION_ID" .Values.minecraftServer.ftbModpackVersionId  }}
        {{- end }}
        {{- else if eq .Values.minecraftServer.type "CURSEFORGE" }}
{{- template "minecraft.envMap" list "CF_SERVER_MOD" .Values.minecraftServer.cfServerMod  }}
{{- template "minecraft.envMap" list "FTB_LEGACYJAVAFIXER" .Values.minecraftServer.ftbLegacyJavaFixer  }}
        {{- end }}
{{- template "minecraft.envMap" list "VERSION" .Values.minecraftServer.version  }}
{{- template "minecraft.envMap" list "DIFFICULTY" .Values.minecraftServer.difficulty  }}
{{- template "minecraft.envMap" list "WHITELIST" .Values.minecraftServer.whitelist }}
{{- template "minecraft.envMap" list "OPS" .Values.minecraftServer.ops  }}
{{- template "minecraft.envMap" list "ICON" .Values.minecraftServer.icon  }}
{{- template "minecraft.envMap" list "MAX_PLAYERS" .Values.minecraftServer.maxPlayers  }}
{{- template "minecraft.envMap" list "MAX_WORLD_SIZE" .Values.minecraftServer.maxWorldSize  }}
{{- template "minecraft.envMap" list "ALLOW_NETHER" .Values.minecraftServer.allowNether  }}
{{- template "minecraft.envMap" list "ANNOUNCE_PLAYER_ACHIEVEMENTS" .Values.minecraftServer.announcePlayerAchievements  }}
{{- template "minecraft.envMap" list "ENABLE_COMMAND_BLOCK" .Values.minecraftServer.enableCommandBlock  }}
{{- template "minecraft.envMap" list "FORCE_GAMEMODE" .Values.minecraftServer.forcegameMode  }}
        {{- if .Values.minecraftServer.forceReDownload }}
        - name: FORCE_REDOWNLOAD
          value: "TRUE"
        {{- end }}
{{- template "minecraft.envMap" list "GENERATE_STRUCTURES" .Values.minecraftServer.generateStructures  }}
{{- template "minecraft.envMap" list "HARDCORE" .Values.minecraftServer.hardcore  }}
{{- template "minecraft.envMap" list "MAX_BUILD_HEIGHT" .Values.minecraftServer.maxBuildHeight  }}
{{- template "minecraft.envMap" list "MAX_TICK_TIME" .Values.minecraftServer.maxTickTime  }}
{{- template "minecraft.envMap" list "SPAWN_ANIMALS" .Values.minecraftServer.spawnAnimals  }}
{{- template "minecraft.envMap" list "SPAWN_MONSTERS" .Values.minecraftServer.spawnMonsters  }}
{{- template "minecraft.envMap" list "SPAWN_NPCS" .Values.minecraftServer.spawnNPCs  }}
{{- template "minecraft.envMap" list "SPAWN_PROTECTION" .Values.minecraftServer.spawnProtection  }}
{{- template "minecraft.envMap" list "VIEW_DISTANCE" .Values.minecraftServer.viewDistance  }}
{{- template "minecraft.envMap" list "SEED" .Values.minecraftServer.levelSeed  }}
{{- template "minecraft.envMap" list "MODE" .Values.minecraftServer.gameMode  }}
{{- template "minecraft.envMap" list "MOTD" .Values.minecraftServer.motd  }}
{{- template "minecraft.envMap" list "PVP" .Values.minecraftServer.pvp  }}
{{- template "minecraft.envMap" list "LEVEL_TYPE" .Values.minecraftServer.levelType  }}
{{- template "minecraft.envMap" list "GENERATOR_SETTINGS" .Values.minecraftServer.generatorSettings  }}
{{- template "minecraft.envMap" list "LEVEL" .Values.minecraftServer.worldSaveName  }}
        {{- if .Values.minecraftServer.downloadWorldUrl }}
{{- template "minecraft.envMap" list "WORLD" .Values.minecraftServer.downloadWorldUrl  }}
        {{- end }}
        {{- if .Values.minecraftServer.downloadModpackUrl }}
{{- template "minecraft.envMap" list "MODPACK" .Values.minecraftServer.downloadModpackUrl  }}
        {{- if .Values.minecraftServer.removeOldMods }}
        - name: REMOVE_OLD_MODS
          value: "TRUE"
        {{- end }}
        {{- end }}
        {{- if .Values.minecraftServer.spigetResources }}
{{- template "minecraft.envMap" list "SPIGET_RESOURCES" join "," .Values.minecraftServer.spigetResources  }}
        {{- end }}
        {{- if .Values.minecraftServer.vanillaTweaksShareCodes }}
{{- template "minecraft.envMap" list "VANILLATWEAKS_SHARECODE" join "," .Values.minecraftServer.vanillaTweaksShareCodes  }}
        {{- end }}
        {{- if .Values.minecraftServer.resourcePackUrl }}
{{- template "minecraft.envMap" list "RESOURCE_PACK" .Values.minecraftServer.resourcePackUrl  }}
        {{- end }}
        {{- if .Values.minecraftServer.resourcePackSha }}
{{- template "minecraft.envMap" list "RESOURCE_PACK_SHA1" .Values.minecraftServer.resourcePackSha  }}
        {{- end }}
        {{- if .Values.minecraftServer.resourcePackEnforce }}
        - name: RESOURCE_PACK_ENFORCE
          value: "TRUE"
        {{- end }}
{{- template "minecraft.envMap" list "ONLINE_MODE" .Values.minecraftServer.onlineMode  }}
{{- template "minecraft.envMap" list "MEMORY" .Values.minecraftServer.memory  }}
{{- template "minecraft.envMap" list "JVM_OPTS" .Values.minecraftServer.jvmOpts  }}
{{- template "minecraft.envMap" list "JVM_XX_OPTS" .Values.minecraftServer.jvmXXOpts  }}
{{- template "minecraft.envMap" list "OVERRIDE_SERVER_PROPERTIES" .Values.minecraftServer.overrideServerProperties  }}

        {{- if .Values.minecraftServer.rcon.enabled }}
        - name: ENABLE_RCON
          value: "true"
        - name: RCON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minecraftServer.rcon.existingSecret | default (include "minecraft.fullname" .) }}
              key: {{ .Values.minecraftServer.rcon.secretKey | default "rcon-password" }}
        {{- else }}
        - name: ENABLE_RCON
          value: "false"
        {{- end }}
        {{- if .Values.minecraftServer.query.enabled }}
        - name: ENABLE_QUERY
          value: "true"
{{- template "minecraft.envMap" list "QUERY_PORT" .Values.minecraftServer.query.port  }}
        {{- end }}

      {{- range $key, $value := .Values.extraEnv }}
      {{-   if kindIs "map" $value }}
      {{-     if hasKey $value "valueFrom" }}
        - name: {{ $key }}
          valueFrom:
            {{- $value.valueFrom | toYaml | nindent 12 }}
      {{-     end }}
      {{-   else }}
        - name: {{ $key }}
          value: {{ $value | quote }}
      {{-   end }}
      {{- end }}

        ports:
        - name: minecraft
          containerPort: 25565
          protocol: TCP
        {{- if .Values.minecraftServer.rcon.enabled }}
        - name: rcon
          containerPort: {{ .Values.minecraftServer.rcon.port }}
          protocol: TCP
        {{- end }}
        {{- range .Values.minecraftServer.extraPorts }}
        {{- if .service.enabled }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          {{- if .protocol }}
          protocol: {{ .protocol }}
          {{- else }}
          protocol: TCP
          {{- end }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - name: datadir
          mountPath: /data
          {{- if (and .Values.persistence.dataDir.enabled .Values.persistence.dataDir.subPath) }}
          subPath: {{ .Values.persistence.dataDir.subPath }}
          {{- end }}
        - name: backupdir
          mountPath: {{ default "/backups" .Values.mcbackup.destDir }}
          readOnly: true
        {{- range .Values.extraVolumes }}
        {{-   if .volumeMounts }}
        {{-     toYaml .volumeMounts | nindent 8 }}
        {{-   end }}
        {{- end }}
      {{- if .Values.sidecarContainers }}
      {{- toYaml .Values.sidecarContainers | nindent 6 }}
      {{- end }}
      volumes:
      - name: datadir
      {{- if .Values.persistence.dataDir.enabled }}
        persistentVolumeClaim:
        {{- if .Values.persistence.dataDir.existingClaim }}
          claimName: {{ .Values.persistence.dataDir.existingClaim }}
        {{- else }}
          claimName: {{ template "minecraft.fullname" . }}-datadir
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: backupdir
      {{- if and .Values.mcbackup.persistence.backupDir.enabled .Values.mcbackup.enabled }}
        persistentVolumeClaim:
        {{- if .Values.mcbackup.persistence.backupDir.existingClaim }}
          claimName: {{ .Values.mcbackup.persistence.backupDir.existingClaim }}
        {{- else }}
          claimName: {{ template "minecraft.fullname" . }}-backupdir
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if eq .Values.mcbackup.backupMethod "rclone" }}
      - name: rclone-config
        secret:
        {{- if .Values.mcbackup.rcloneConfigExistingSecret }}
          secretName: {{ .Values.mcbackup.rcloneConfigExistingSecret }}
        {{- else }}
          secretName: {{ template "minecraft.fullname" . }}-rclone-config
        {{- end }}
          items:
          - key: rclone.conf
            path: rclone.conf
      {{- end }}
      {{- range .Values.extraVolumes }}
      {{-   if .volumes }}
      {{-     toYaml .volumes | nindent 6 }}
      {{-   end }}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
{{ end }}
